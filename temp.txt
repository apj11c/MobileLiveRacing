commit e943c93d31b8138d1949d696de4d7fd673b87cd9
Merge: 4c816e2 9fb3c68
Author: Rish <rg14d@my.fsu.edu>
Date:   Fri Jul 13 13:58:41 2018 -0400

    WIP on master: 4c816e2 text edit

diff --cc .idea/caches/build_file_checksums.ser
index e6389f8,e6389f8..190e711
Binary files differ
diff --cc app/build.gradle
index af32382,af32382..6e79ee5
--- a/app/build.gradle
+++ b/app/build.gradle
@@@ -38,6 -38,6 +38,7 @@@ dependencies 
      implementation 'com.google.firebase:firebase-core:16.0.1'
      implementation 'com.google.firebase:firebase-database:16.0.1'
      implementation 'com.firebaseui:firebase-ui-auth:4.0.0'
++    implementation 'com.google.android.gms:play-services-location:15.0.1'
  }
  
  apply plugin: 'com.google.gms.google-services'
diff --cc app/src/main/java/edu/fsu/cs/mobile/mobileliveracing/LocationEntry.java
index ae8afd5,ae8afd5..c065b48
--- a/app/src/main/java/edu/fsu/cs/mobile/mobileliveracing/LocationEntry.java
+++ b/app/src/main/java/edu/fsu/cs/mobile/mobileliveracing/LocationEntry.java
@@@ -1,14 -1,14 +1,26 @@@
  package edu.fsu.cs.mobile.mobileliveracing;
  
++import android.location.Location;
++import android.location.LocationManager;
++import android.support.annotation.NonNull;
++import android.util.Log;
++
++import com.google.android.gms.location.FusedLocationProviderClient;
++import com.google.android.gms.location.LocationServices;
++import com.google.android.gms.tasks.OnFailureListener;
++import com.google.android.gms.tasks.OnSuccessListener;
  import com.google.firebase.auth.FirebaseUser;
  import com.google.firebase.database.DataSnapshot;
  
  import java.util.Calendar;
--import java.util.Date;
  import java.util.HashMap;
++import java.util.List;
  import java.util.Map;
  
  public class LocationEntry {
++    private static String TAG = LocationEntry.class.getCanonicalName();
++    private static Location mLastLoc= null;
++
      public static final String LAT = "lat";
      public static final String LNG = "lng";
      public static final String CURRENT_TIME = "currentTime";
@@@ -95,4 -95,4 +107,99 @@@
          return (new LocationEntry(lat, lng, null).setCurrentTime(currentTime).setUserName(username));
      }
  
++    public static Location getLastLocation(MainActivity mActivity){
++
++        mActivity.checkLocationPermission();
++        mLastLoc = null;
++
++        //return getLastKnownLocation(mActivity);
++
++        getLastLocationNewMethod(mActivity);
++
++        for(int i = 0; i < 100; i++){
++
++            if (mLastLoc != null){
++
++                Log.i(TAG, "Found lastLoc");
++                return mLastLoc;
++
++            }else{
++
++                Log.i(TAG, "mLastLoc = null for iteration "+i);
++
++            }
++
++        }
++
++        return null;
++
++    }
++
++    private static Location getLastKnownLocation(MainActivity mActivity) {
++
++        LocationManager mLocationManager = (LocationManager)mActivity.getApplicationContext().getSystemService(MainActivity.LOCATION_SERVICE);
++        List<String> providers = mLocationManager.getProviders(true);
++        Location bestLocation = null;
++        for (String provider : providers) {
++
++            try{
++
++                Location l = mLocationManager.getLastKnownLocation(provider);
++                if (l == null) {
++                    continue;
++                }
++                if (bestLocation == null || l.getAccuracy() < bestLocation.getAccuracy()) {
++                    // Found best last known location: %s", l);
++                    bestLocation = l;
++                }
++
++            }catch(SecurityException s){
++
++                Log.e(TAG, "Security Exception: Permission probably not found for :"+provider);
++
++            }
++
++        }
++
++        Log.i(TAG, bestLocation.toString());
++        return bestLocation;
++
++    }
++
++    private static void getLastLocationNewMethod(MainActivity mainActivity){
++        FusedLocationProviderClient mFusedLocationClient = LocationServices.getFusedLocationProviderClient(mainActivity);
++
++        mLastLoc = null;
++
++        try{
++
++            mFusedLocationClient.getLastLocation()
++                    .addOnSuccessListener(new OnSuccessListener<Location>() {
++                        @Override
++                        public void onSuccess(Location location) {
++                            // GPS location can be null if GPS is switched off
++                            if (location != null) {
++                                //getAddress(location);
++                                mLastLoc = location;
++                            }
++                        }
++                    })
++                    .addOnFailureListener(new OnFailureListener() {
++                        @Override
++                        public void onFailure(@NonNull Exception e) {
++                            Log.d(TAG, "Error trying to get last GPS location");
++                            e.printStackTrace();
++                        }
++                    });
++
++        }catch(SecurityException s){
++
++            Log.e(TAG, "Security Exception: Permission probably not found");
++
++        }
++
++
++    }
++
++
  }
diff --cc app/src/main/java/edu/fsu/cs/mobile/mobileliveracing/MainActivity.java
index 93ddb53,93ddb53..5512b3c
--- a/app/src/main/java/edu/fsu/cs/mobile/mobileliveracing/MainActivity.java
+++ b/app/src/main/java/edu/fsu/cs/mobile/mobileliveracing/MainActivity.java
@@@ -1,6 -1,6 +1,7 @@@
  package edu.fsu.cs.mobile.mobileliveracing;
  
  import android.Manifest;
++import android.content.DialogInterface;
  import android.content.pm.PackageManager;
  import android.content.res.AssetManager;
  import android.location.Location;
@@@ -10,6 -10,6 +11,8 @@@ import android.support.annotation.NonNu
  import android.support.v4.app.ActivityCompat;
  import android.support.v4.app.FragmentManager;
  import android.support.v4.app.FragmentTransaction;
++import android.support.v4.content.ContextCompat;
++import android.support.v7.app.AlertDialog;
  import android.support.v7.app.AppCompatActivity;
  import android.os.Bundle;
  import android.util.Log;
@@@ -28,6 -28,6 +31,7 @@@ import java.io.InputStream
  public class MainActivity extends AppCompatActivity {
  
      private static final String TAG = MainActivity.class.getCanonicalName();
++    private static final int MY_PERMISSIONS_REQUEST_LOCATION = 99;
      //firebase tests
      public static final int RC_SIGN_IN = 1234;
      private static final String TEMP_RACE_NAME = "tempFastestRace";
@@@ -39,6 -39,6 +43,7 @@@
  
      //firebase tests
      private FirebaseManager mFirebase;
++    private Boolean locationPermissionGranted;
  
      public LocationManager mLocationManager;
      public Location location;
@@@ -69,6 -69,6 +74,10 @@@
              e.printStackTrace();
          }*/
  
++        //location permissions setup
++        locationPermissionGranted = false;
++        checkLocationPermission();
++
          //firebase tests
          //initialize manager
          mFirebase = new FirebaseManager(this);
@@@ -164,16 -164,16 +173,10 @@@
                  break;
              case FRAGMENT_MAP:
                  mLocationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
--                Log.i(TAG, "MainFragment.onCreate(): Checking Permission..");
  
++                Log.i(TAG, "MainFragment.onCreate(): Checking Permission..");
                  if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
--                    // TODO: Consider calling
--                    //    ActivityCompat#requestPermissions
--                    // here to request the missing permissions, and then overriding
--                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
--                    //                                          int[] grantResults)
--                    // to handle the case where the user grants the permission. See the documentation
--                    // for ActivityCompat#requestPermissions for more details.
++
                      ActivityCompat.requestPermissions(MainActivity.this,
                              new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
                              1);
@@@ -182,8 -182,8 +185,11 @@@
                              1);
                      //return;
                  }
++
                  Log.i(TAG, "MainFragment.onCreate(): Permissions granted");
++
                  location = mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
++
                  double latitude = location.getLatitude();
                  double lng = location.getLongitude();
                  DrawMap(latitude, lng);
@@@ -209,6 -209,6 +215,46 @@@
          fragmentTransaction.commit();
      }
  
++    public boolean checkLocationPermission() {
++        if (ContextCompat.checkSelfPermission(this,
++                Manifest.permission.ACCESS_FINE_LOCATION)
++                != PackageManager.PERMISSION_GRANTED) {
++
++            // Should we show an explanation?
++            if (ActivityCompat.shouldShowRequestPermissionRationale(this,
++                    Manifest.permission.ACCESS_FINE_LOCATION)) {
++
++                // Show an explanation to the user *asynchronously* -- don't block
++                // this thread waiting for the user's response! After the user
++                // sees the explanation, try again to request the permission.
++                new AlertDialog.Builder(this)
++                        .setTitle(R.string.locPermTitle)
++                        .setMessage(R.string.locPermBody)
++                        .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
++                            @Override
++                            public void onClick(DialogInterface dialogInterface, int i) {
++                                //Prompt the user once explanation has been shown
++                                ActivityCompat.requestPermissions(MainActivity.this,
++                                        new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
++                                        MY_PERMISSIONS_REQUEST_LOCATION);
++                            }
++                        })
++                        .create()
++                        .show();
++
++
++            } else {
++                // No explanation needed, we can request the permission.
++                ActivityCompat.requestPermissions(this,
++                        new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
++                        MY_PERMISSIONS_REQUEST_LOCATION);
++            }
++            return false;
++        } else {
++            return true;
++        }
++    }
++
      @Override
      public boolean onCreateOptionsMenu(Menu menu) {
          MenuInflater inflater = getMenuInflater();
@@@ -244,6 -244,6 +290,34 @@@
  
      }
  
++    @Override
++    public void onRequestPermissionsResult(int requestCode,
++                                           String permissions[], int[] grantResults) {
++        switch (requestCode) {
++            case MY_PERMISSIONS_REQUEST_LOCATION: {
++                // If request is cancelled, the result arrays are empty.
++                if (grantResults.length > 0
++                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
++
++                    if (ContextCompat.checkSelfPermission(this,
++                            Manifest.permission.ACCESS_FINE_LOCATION)
++                            == PackageManager.PERMISSION_GRANTED) {
++
++                        locationPermissionGranted = true;
++                    }
++
++                } else {
++
++                    //denied
++                    locationPermissionGranted = false;
++
++                }
++                return;
++            }
++
++        }
++    }
++
      //firebase tests
      //called everytime a new LocationEntry object is inserted into the db
      public void onReceiveNewLoc(LocationEntry loc){
diff --cc app/src/main/res/values/strings.xml
index c2d8066,c2d8066..e4e02c8
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@@ -8,4 -8,4 +8,7 @@@
      <string name="longitude">Longitude</string>
      <string name="latitude">Latitude</string>
      <string name="coordinates">Coordinates</string>
++    <string name="locPermTitle">Permissions Required</string>
++    <string name="locPermBody">Location Permissions are needed to allow us to time and track your race. Would you like to give permission?</string>
++    <string name="ok">Okay</string>
  </resources>
